<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mesos on blog.blijblijblij.com</title>
    <link>https://blog.blijblijblij.com/tags/mesos/</link>
    <description>Recent content in mesos on blog.blijblijblij.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://github.com/blijblijblij&#34;&gt;Rogier Wessel&lt;/a&gt; 2020</copyright>
    <lastBuildDate>Sat, 21 May 2016 11:06:05 +0200</lastBuildDate>
    
	<atom:link href="https://blog.blijblijblij.com/tags/mesos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Running pentaho on mesos - part 1</title>
      <link>https://blog.blijblijblij.com/posts/pentaho-and-mesos/</link>
      <pubDate>Sat, 21 May 2016 11:06:05 +0200</pubDate>
      
      <guid>https://blog.blijblijblij.com/posts/pentaho-and-mesos/</guid>
      <description>Introduction I have been amazed by the ease of getting software through the software development cycle once you start doing it the Docker way. I picked it up soon after it came to light, and hammered it hard. At that point I got all developers aligned to use Docker as well.
As we started using Docker more extensively, combining different Frontends services and Backends services through Docker compositions, running multiple hosts, intranet, things started to get a bit more complicated.</description>
    </item>
    
  </channel>
</rss>